[
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "mixins",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "SimpleRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "AvaliacaoApiView",
        "importPath": "cursos.views",
        "description": "cursos.views",
        "isExtraImport": true,
        "detail": "cursos.views",
        "documentation": {}
    },
    {
        "label": "CursoApiView",
        "importPath": "cursos.views",
        "description": "cursos.views",
        "isExtraImport": true,
        "detail": "cursos.views",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework.generics",
        "description": "rest_framework.generics",
        "isExtraImport": true,
        "detail": "rest_framework.generics",
        "documentation": {}
    },
    {
        "label": "action",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "router",
        "importPath": "cursos.urls",
        "description": "cursos.urls",
        "isExtraImport": true,
        "detail": "cursos.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "cursos.migrations.0001_initial",
        "description": "cursos.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Curso',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('criacao', models.DateTimeField(auto_now_add=True)),",
        "detail": "cursos.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "CursoAdmin",
        "kind": 6,
        "importPath": "cursos.admin",
        "description": "cursos.admin",
        "peekOfCode": "class CursoAdmin(admin.ModelAdmin): \n    list_display = ('titulo', 'url','criacao', 'atualizacao', 'ativo')\n@admin.register(Avaliacao)\nclass AvaliacaoAdmin (admin.ModelAdmin):\n    list_display = ('curso', 'nome', 'email', 'comentario', 'avaliacao', 'criacao', 'atualizacao', 'ativo')",
        "detail": "cursos.admin",
        "documentation": {}
    },
    {
        "label": "AvaliacaoAdmi",
        "kind": 6,
        "importPath": "cursos.admin",
        "description": "cursos.admin",
        "peekOfCode": "class AvaliacaoAdmin (admin.ModelAdmin):\n    list_display = ('curso', 'nome', 'email', 'comentario', 'avaliacao', 'criacao', 'atualizacao', 'ativo')",
        "detail": "cursos.admin",
        "documentation": {}
    },
    {
        "label": "CursosConfig",
        "kind": 6,
        "importPath": "cursos.apps",
        "description": "cursos.apps",
        "peekOfCode": "class CursosConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'cursos'",
        "detail": "cursos.apps",
        "documentation": {}
    },
    {
        "label": "Base",
        "kind": 6,
        "importPath": "cursos.models",
        "description": "cursos.models",
        "peekOfCode": "class Base(models.Model):\n    criacao = models.DateTimeField(auto_now_add=True)\n    atualizacao = models.DateTimeField(auto_now=True)\n    ativo = models.BooleanField(default=True)\n    class Meta:\n        abstract = True\nclass Curso(Base):\n    titulo = models.CharField(max_length=255)\n    url = models.URLField(unique=True)\n    class Meta:",
        "detail": "cursos.models",
        "documentation": {}
    },
    {
        "label": "Curso",
        "kind": 6,
        "importPath": "cursos.models",
        "description": "cursos.models",
        "peekOfCode": "class Curso(Base):\n    titulo = models.CharField(max_length=255)\n    url = models.URLField(unique=True)\n    class Meta:\n        verbose_name = 'Curso'\n        verbose_name_plural = 'Cursos'\n    def __str__(self):\n        return self.titulo\nclass Avaliacao(Base):\n    curso = models.ForeignKey(Curso, related_name='avaliacoes', on_delete=models.CASCADE)",
        "detail": "cursos.models",
        "documentation": {}
    },
    {
        "label": "Avaliacao",
        "kind": 6,
        "importPath": "cursos.models",
        "description": "cursos.models",
        "peekOfCode": "class Avaliacao(Base):\n    curso = models.ForeignKey(Curso, related_name='avaliacoes', on_delete=models.CASCADE)\n    nome = models.CharField(max_length=255)\n    email = models.EmailField()\n    comentario = models.TextField(blank=True, default='')\n    avaliacao = models.DecimalField(max_digits=2, decimal_places=1)\n    class Meta:\n        verbose_name = 'avaliacao'\n        verbose_name_plural = 'avaliacoes'\n    def __str__(self):",
        "detail": "cursos.models",
        "documentation": {}
    },
    {
        "label": "AvaliacaoSerializer",
        "kind": 6,
        "importPath": "cursos.serializers",
        "description": "cursos.serializers",
        "peekOfCode": "class AvaliacaoSerializer(serializers.ModelSerializer):\n    class Meta:\n        extra_kwargs = {\n            'email': {'write_only' : True}\n        }\n        model = Avaliacao\n        fields = (\n            'id',\n            'curso',\n            'nome',",
        "detail": "cursos.serializers",
        "documentation": {}
    },
    {
        "label": "CursoSerializer",
        "kind": 6,
        "importPath": "cursos.serializers",
        "description": "cursos.serializers",
        "peekOfCode": "class CursoSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Curso\n        fields = (\n            'id',\n            'titulo',\n            'url',\n            'criacao',\n            'ativo'\n        )",
        "detail": "cursos.serializers",
        "documentation": {}
    },
    {
        "label": "router",
        "kind": 5,
        "importPath": "cursos.urls",
        "description": "cursos.urls",
        "peekOfCode": "router = SimpleRouter()\nrouter.register('cursos', CursoApiViewSet)\nrouter.register('avaliacoes', AvaliacaoApiViewSet)\nurlpatterns = [\n    path('cursos/', CursosApiView.as_view(), name='cursos'),\n    path('cursos/<int:curso_pk>/', CursoApiView.as_view(), name='curso'),\n    path('cursos/<int:curso_pk>/avaliacoes/', AvaliacoesApiView.as_view(), name='curso_avalicoes'),\n    path('cursos/<int:curso_pk>/avaliacoes/<int:avaliacao_pk>/', AvaliacoesApiView.as_view(), name='curso_avalicoes'),\n    path('avaliacoes/', AvaliacoesApiView.as_view(), name='avaliacoes'),\n    path('avaliacoes/<int:avaliacao_pk>/', AvaliacaoApiView.as_view(), name='avaliacao')",
        "detail": "cursos.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "cursos.urls",
        "description": "cursos.urls",
        "peekOfCode": "urlpatterns = [\n    path('cursos/', CursosApiView.as_view(), name='cursos'),\n    path('cursos/<int:curso_pk>/', CursoApiView.as_view(), name='curso'),\n    path('cursos/<int:curso_pk>/avaliacoes/', AvaliacoesApiView.as_view(), name='curso_avalicoes'),\n    path('cursos/<int:curso_pk>/avaliacoes/<int:avaliacao_pk>/', AvaliacoesApiView.as_view(), name='curso_avalicoes'),\n    path('avaliacoes/', AvaliacoesApiView.as_view(), name='avaliacoes'),\n    path('avaliacoes/<int:avaliacao_pk>/', AvaliacaoApiView.as_view(), name='avaliacao')\n]",
        "detail": "cursos.urls",
        "documentation": {}
    },
    {
        "label": "CursosApiView",
        "kind": 6,
        "importPath": "cursos.views",
        "description": "cursos.views",
        "peekOfCode": "class CursosApiView(generics.ListCreateAPIView):\n    queryset = Curso.objects.all()\n    serializer_class = CursoSerializer\nclass CursoApiView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Curso.objects.all()\n    serializer_class = CursoSerializer\nclass AvaliacoesApiView(generics.ListCreateAPIView):\n    queryset = Avaliacao.objects.all()\n    serializer_class = AvaliacaoSerializer\n    def get_queryset(self):",
        "detail": "cursos.views",
        "documentation": {}
    },
    {
        "label": "CursoApiView",
        "kind": 6,
        "importPath": "cursos.views",
        "description": "cursos.views",
        "peekOfCode": "class CursoApiView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Curso.objects.all()\n    serializer_class = CursoSerializer\nclass AvaliacoesApiView(generics.ListCreateAPIView):\n    queryset = Avaliacao.objects.all()\n    serializer_class = AvaliacaoSerializer\n    def get_queryset(self):\n        if self.kwargs.get('curso_pk'):\n            return self.queryset.filter(curso_id = self.kwargs.get('curso_pk'))\n        return self.queryset.all()",
        "detail": "cursos.views",
        "documentation": {}
    },
    {
        "label": "AvaliacoesApiView",
        "kind": 6,
        "importPath": "cursos.views",
        "description": "cursos.views",
        "peekOfCode": "class AvaliacoesApiView(generics.ListCreateAPIView):\n    queryset = Avaliacao.objects.all()\n    serializer_class = AvaliacaoSerializer\n    def get_queryset(self):\n        if self.kwargs.get('curso_pk'):\n            return self.queryset.filter(curso_id = self.kwargs.get('curso_pk'))\n        return self.queryset.all()\nclass AvaliacaoApiView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Avaliacao.objects.all()\n    serializer_class = AvaliacaoSerializer",
        "detail": "cursos.views",
        "documentation": {}
    },
    {
        "label": "AvaliacaoApiView",
        "kind": 6,
        "importPath": "cursos.views",
        "description": "cursos.views",
        "peekOfCode": "class AvaliacaoApiView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Avaliacao.objects.all()\n    serializer_class = AvaliacaoSerializer\n    def get_queryset(self):\n        if self.kwargs.get('curso_pk'):\n            return get_object_or_404(self.get_queryset(), curso_id=self.kwargs.get('curso_pk'), avaliacao_pk=self.kwargs.get('avaliacao_pk'))\n        return get_object_or_404(self.get_queryset(), pk=self.kwargs.get('avaliacao_pk'))\n# =========== API v2 ==============\nclass CursoApiViewSet(viewsets.ViewSet):\n    queryset = Curso.objects.all()",
        "detail": "cursos.views",
        "documentation": {}
    },
    {
        "label": "CursoApiViewSet",
        "kind": 6,
        "importPath": "cursos.views",
        "description": "cursos.views",
        "peekOfCode": "class CursoApiViewSet(viewsets.ViewSet):\n    queryset = Curso.objects.all()\n    serializer_class = CursoSerializer\n    @action(detail=True, methods=['get'])\n    def avaliacoes (self, request, pk=None):\n        curso = self.get_object()\n        serializer = AvaliacaoSerializer(curso.avaliacoes.all(), many=True)\n        return Response(serializer.data)\n# class AvaliacaoApiViewSet(viewsets.ViewSet):\n#     queryset = Avaliacao.objects.all()",
        "detail": "cursos.views",
        "documentation": {}
    },
    {
        "label": "AvaliacaoApiViewSet",
        "kind": 6,
        "importPath": "cursos.views",
        "description": "cursos.views",
        "peekOfCode": "class AvaliacaoApiViewSet(mixins.CreateModelMixin, mixins.UpdateModelMixin, mixins.DestroyModelMixin, viewsets.GenericViewSet):\n    queryset = Avaliacao.objects.all()\n    serializer_class = AvaliacaoSerializer",
        "detail": "cursos.views",
        "documentation": {}
    },
    {
        "label": "CursoApiView",
        "kind": 6,
        "importPath": "cursos.views_content-depreciet",
        "description": "cursos.views_content-depreciet",
        "peekOfCode": "class CursoApiView(APIView):\n    def get(self, request):\n        cursos = Curso.objects.all()\n        serializer = CursoSerializer(cursos, many=True)\n        return Response(serializer.data)\n    def post(self, request):\n        serializer = CursoSerializer(data=request.data)\n        serializer.is_valid(raise_exception=True)\n        serializer.save()\n        return Response(serializer.data, status=status.HTTP_201_CREATED)",
        "detail": "cursos.views_content-depreciet",
        "documentation": {}
    },
    {
        "label": "AvaliacaoApiView",
        "kind": 6,
        "importPath": "cursos.views_content-depreciet",
        "description": "cursos.views_content-depreciet",
        "peekOfCode": "class AvaliacaoApiView(APIView):\n    def get(self, request):\n        avaliacoes = Avaliacao.objects.all()\n        serializer = AvaliacaoSerializer(avaliacoes, many=True)\n        return Response(serializer.data)\n    def post(self, request):\n        serializer = AvaliacaoSerializer(data=request.data)\n        serializer.is_valid(raise_exception=True)\n        serializer.save()\n        return Response(serializer.data, status=status.HTTP_201_CREATED)",
        "detail": "cursos.views_content-depreciet",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "escola.asgi",
        "description": "escola.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "escola.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-#3#$5q=@@6uh(trx9t^kx27#oa5zfe7gf3$iwx-k=^ge)w@2fc'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-#3#$5q=@@6uh(trx9t^kx27#oa5zfe7gf3$iwx-k=^ge)w@2fc'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'cursos',",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'cursos',\n    'rest_framework'\n]",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'escola.urls'",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "ROOT_URLCONF = 'escola.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "WSGI_APPLICATION = 'escola.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.1/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.1/howto/static-files/\nSTATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "STATIC_URL = 'static/'\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "escola.settings",
        "description": "escola.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "escola.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "escola.urls",
        "description": "escola.urls",
        "peekOfCode": "urlpatterns = [ \n    path('api/v1/', include('cursos.urls')),\n    path('api/v2/', include(router.urls)),\n    path('admin', admin.site.urls), \n    path('auth/', include('rest_framework.urls')),\n]",
        "detail": "escola.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "escola.wsgi",
        "description": "escola.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "escola.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'escola.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]